{"version":3,"sources":["../../app/models/user.js"],"names":["db","query","then","res","console","log","rows","e","error","stack","module","exports","select","table","filter","Promise","resolve","reject","insert","text","params","update"],"mappings":";;AAAA;;;;AAEAA,eAAGC,KAAH,CAAS,qBAAT,EACCC,IADD,CACM,UAAAC,GAAG;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAAS,CAAT,CAAZ,CAAJ;AAAA,CADT,WAEO,UAAAC,CAAC;AAAA,SAAIH,OAAO,CAACI,KAAR,CAAcD,CAAC,CAACE,KAAhB,CAAJ;AAAA,CAFR;;AAIAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,MAAM,EAAE,gBAACC,KAAD,EAAQC,MAAR,EAAmB;AACzB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCjB,qBAAGC,KAAH,CAAS,4BAAT,EAAuC,CAAC,SAAD,CAAvC,EACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIa,OAAO,CAACb,GAAD,CAAX;AAAA,OADT,WAEO,UAAAI,CAAC;AAAA,eAAIU,MAAM,CAACV,CAAD,CAAV;AAAA,OAFR;AAGD,KAJM,CAAP;AAKD,GAPc;AAQfW,EAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,MAAP,EAAkB;AACxB,WAAO,IAAIL,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCjB,qBAAGC,KAAH,CAAS,4BAAT,EAAuC,CAAC,SAAD,CAAvC,EACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIa,OAAO,CAACb,GAAD,CAAX;AAAA,OADT,WAEO,UAAAI,CAAC;AAAA,eAAIU,MAAM,CAACV,CAAD,CAAV;AAAA,OAFR;AAGD,KAJM,CAAP;AAKD,GAdc;AAefc,EAAAA,MAAM,EAAE,gBAACF,IAAD,EAAOC,MAAP,EAAkB;AACxB,WAAO,IAAIL,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCjB,qBAAGC,KAAH,CAAS,4BAAT,EAAuC,CAAC,SAAD,CAAvC,EACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIa,OAAO,CAACb,GAAD,CAAX;AAAA,OADT,WAEO,UAAAI,CAAC;AAAA,eAAIU,MAAM,CAACV,CAAD,CAAV;AAAA,OAFR;AAGD,KAJM,CAAP;AAKD,GArBc;AAsBf,YAAQ,iBAACY,IAAD,EAAOC,MAAP,EAAkB;AACxB,WAAO,IAAIL,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCjB,qBAAGC,KAAH,CAAS,4BAAT,EAAuC,CAAC,SAAD,CAAvC,EACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIa,OAAO,CAACb,GAAD,CAAX;AAAA,OADT,WAEO,UAAAI,CAAC;AAAA,eAAIU,MAAM,CAACV,CAAD,CAAV;AAAA,OAFR;AAGD,KAJM,CAAP;AAKD;AA5Bc,CAAjB","sourcesContent":["import db from '../db'\n\ndb.query('SELECT NOW() as now')\n.then(res => console.log(res.rows[0]))\n.catch(e => console.error(e.stack))\n\nmodule.exports = {\n  select: (table, filter) => {\n    return new Promise((resolve, reject) => {\n      db.query('SELECT $1::text as message', ['SELECT!'])\n      .then(res => resolve(res))\n      .catch(e => reject(e))\n    })\n  },\n  insert: (text, params) => {\n    return new Promise((resolve, reject) => {\n      db.query('SELECT $1::text as message', ['INSERT!'])\n      .then(res => resolve(res))\n      .catch(e => reject(e))\n    })\n  },\n  update: (text, params) => {\n    return new Promise((resolve, reject) => {\n      db.query('SELECT $1::text as message', ['UPDATE!'])\n      .then(res => resolve(res))\n      .catch(e => reject(e))\n    })\n  },\n  delete: (text, params) => {\n    return new Promise((resolve, reject) => {\n      db.query('SELECT $1::text as message', ['DELETE!'])\n      .then(res => resolve(res))\n      .catch(e => reject(e))\n    })\n  }\n}"],"file":"user.js"}